package Interfaces;

import Servidor.ServidorSocket;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class frmPrincipal extends javax.swing.JFrame {

    private ServidorSocket servidorSocket;    
    private Thread servidor;
    
    public frmPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Servidor = new javax.swing.JTabbedPane();
        panelCliente = new javax.swing.JPanel();
        panelServidor = new javax.swing.JPanel();
        panelConfigServidor = new javax.swing.JPanel();
        lblServidorPorta = new javax.swing.JLabel();
        txtServidorPorta = new javax.swing.JTextField();
        btnServidorIniciar = new javax.swing.JButton();
        btnServidorParar = new javax.swing.JButton();
        panelServidorLog = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtServidorLog = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout panelClienteLayout = new javax.swing.GroupLayout(panelCliente);
        panelCliente.setLayout(panelClienteLayout);
        panelClienteLayout.setHorizontalGroup(
            panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 395, Short.MAX_VALUE)
        );
        panelClienteLayout.setVerticalGroup(
            panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );

        Servidor.addTab("Cliente", panelCliente);

        panelConfigServidor.setBorder(javax.swing.BorderFactory.createTitledBorder("Configurar Servidor"));

        lblServidorPorta.setText("Porta:");

        btnServidorIniciar.setText("Iniciar Servidor");
        btnServidorIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServidorIniciarActionPerformed(evt);
            }
        });

        btnServidorParar.setText("Parar Servidor");
        btnServidorParar.setEnabled(false);
        btnServidorParar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServidorPararActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelConfigServidorLayout = new javax.swing.GroupLayout(panelConfigServidor);
        panelConfigServidor.setLayout(panelConfigServidorLayout);
        panelConfigServidorLayout.setHorizontalGroup(
            panelConfigServidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfigServidorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblServidorPorta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtServidorPorta, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnServidorIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnServidorParar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelConfigServidorLayout.setVerticalGroup(
            panelConfigServidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfigServidorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConfigServidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblServidorPorta)
                    .addComponent(txtServidorPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnServidorIniciar)
                    .addComponent(btnServidorParar))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        panelServidorLog.setBorder(javax.swing.BorderFactory.createTitledBorder("Log"));

        txtServidorLog.setColumns(20);
        txtServidorLog.setRows(5);
        jScrollPane1.setViewportView(txtServidorLog);

        javax.swing.GroupLayout panelServidorLogLayout = new javax.swing.GroupLayout(panelServidorLog);
        panelServidorLog.setLayout(panelServidorLogLayout);
        panelServidorLogLayout.setHorizontalGroup(
            panelServidorLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        panelServidorLogLayout.setVerticalGroup(
            panelServidorLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelServidorLayout = new javax.swing.GroupLayout(panelServidor);
        panelServidor.setLayout(panelServidorLayout);
        panelServidorLayout.setHorizontalGroup(
            panelServidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelConfigServidor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelServidorLog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelServidorLayout.setVerticalGroup(
            panelServidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelServidorLayout.createSequentialGroup()
                .addComponent(panelConfigServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelServidorLog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Servidor.addTab("Servidor", panelServidor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Servidor)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Servidor)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Inicia o servidor.
     * @param evt 
     */
    private void btnServidorIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServidorIniciarActionPerformed
        
        if (Integer.parseInt(txtServidorPorta.getText()) < 1024) {
            JOptionPane.showMessageDialog(panelCliente, "A porta deve ser maior ou igual a 1024.", "AVISO", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.servidorSocket = new ServidorSocket(Integer.parseInt(txtServidorPorta.getText()), txtServidorLog);
        this.servidor = new Thread(this.servidorSocket);
        servidor.start();
        this.IniciarPararServidor(true);
    }//GEN-LAST:event_btnServidorIniciarActionPerformed

    private void btnServidorPararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServidorPararActionPerformed
        try {
            this.servidorSocket.PararServidor();
        } catch (IOException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        IniciarPararServidor(false);
    }//GEN-LAST:event_btnServidorPararActionPerformed

    /**
     * Ativa/Desativa os botões de configuração do servidor.
     * @param iniciar 
     */
    private void IniciarPararServidor(boolean iniciar) {
        if (iniciar) {
            btnServidorIniciar.setEnabled(false);
            btnServidorParar.setEnabled(true);
        } else {
            btnServidorIniciar.setEnabled(true);
            btnServidorParar.setEnabled(false);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPrincipal().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Servidor;
    private javax.swing.JButton btnServidorIniciar;
    private javax.swing.JButton btnServidorParar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblServidorPorta;
    private javax.swing.JPanel panelCliente;
    private javax.swing.JPanel panelConfigServidor;
    private javax.swing.JPanel panelServidor;
    private javax.swing.JPanel panelServidorLog;
    private javax.swing.JTextArea txtServidorLog;
    private javax.swing.JTextField txtServidorPorta;
    // End of variables declaration//GEN-END:variables
}
